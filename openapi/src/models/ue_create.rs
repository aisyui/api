/*
 * Ent Schema API
 *
 * This is an auto generated API description made out of an Ent schema definition
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UeCreate {
    #[serde(rename = "id")]
    pub id: i32,
    #[serde(rename = "limit", skip_serializing_if = "Option::is_none")]
    pub limit: Option<bool>,
    #[serde(rename = "limit_boss", skip_serializing_if = "Option::is_none")]
    pub limit_boss: Option<bool>,
    #[serde(rename = "limit_item", skip_serializing_if = "Option::is_none")]
    pub limit_item: Option<bool>,
    #[serde(rename = "lv", skip_serializing_if = "Option::is_none")]
    pub lv: Option<i32>,
    #[serde(rename = "lv_point", skip_serializing_if = "Option::is_none")]
    pub lv_point: Option<i32>,
    #[serde(rename = "model", skip_serializing_if = "Option::is_none")]
    pub model: Option<i32>,
    #[serde(rename = "sword", skip_serializing_if = "Option::is_none")]
    pub sword: Option<i32>,
    #[serde(rename = "card", skip_serializing_if = "Option::is_none")]
    pub card: Option<i32>,
    #[serde(rename = "mode", skip_serializing_if = "Option::is_none")]
    pub mode: Option<String>,
    #[serde(rename = "cp", skip_serializing_if = "Option::is_none")]
    pub cp: Option<i32>,
    #[serde(rename = "count", skip_serializing_if = "Option::is_none")]
    pub count: Option<i32>,
    #[serde(rename = "location_x", skip_serializing_if = "Option::is_none")]
    pub location_x: Option<i32>,
    #[serde(rename = "location_y", skip_serializing_if = "Option::is_none")]
    pub location_y: Option<i32>,
    #[serde(rename = "location_z", skip_serializing_if = "Option::is_none")]
    pub location_z: Option<i32>,
    #[serde(rename = "location_n", skip_serializing_if = "Option::is_none")]
    pub location_n: Option<i32>,
    #[serde(rename = "author", skip_serializing_if = "Option::is_none")]
    pub author: Option<String>,
    #[serde(rename = "created_at", skip_serializing_if = "Option::is_none")]
    pub created_at: Option<String>,
}

impl UeCreate {
    pub fn new(id: i32) -> UeCreate {
        UeCreate {
            id,
            limit: None,
            limit_boss: None,
            limit_item: None,
            lv: None,
            lv_point: None,
            model: None,
            sword: None,
            card: None,
            mode: None,
            cp: None,
            count: None,
            location_x: None,
            location_y: None,
            location_z: None,
            location_n: None,
            author: None,
            created_at: None,
        }
    }
}

