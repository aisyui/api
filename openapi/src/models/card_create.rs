/*
 * Ent Schema API
 *
 * This is an auto generated API description made out of an Ent schema definition
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CardCreate {
    #[serde(rename = "id")]
    pub id: i32,
    #[serde(rename = "card", skip_serializing_if = "Option::is_none")]
    pub card: Option<i32>,
    #[serde(rename = "skill", skip_serializing_if = "Option::is_none")]
    pub skill: Option<String>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<String>,
    #[serde(rename = "cp", skip_serializing_if = "Option::is_none")]
    pub cp: Option<i32>,
    #[serde(rename = "url", skip_serializing_if = "Option::is_none")]
    pub url: Option<String>,
    #[serde(rename = "count", skip_serializing_if = "Option::is_none")]
    pub count: Option<i32>,
    #[serde(rename = "author", skip_serializing_if = "Option::is_none")]
    pub author: Option<String>,
    #[serde(rename = "created_at", skip_serializing_if = "Option::is_none")]
    pub created_at: Option<String>,
}

impl CardCreate {
    pub fn new(id: i32) -> CardCreate {
        CardCreate {
            id,
            card: None,
            skill: None,
            status: None,
            cp: None,
            url: None,
            count: None,
            author: None,
            created_at: None,
        }
    }
}

