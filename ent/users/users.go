// Code generated by entc, DO NOT EDIT.

package users

import (
	"time"
)

const (
	// Label holds the string label denoting the users type in the database.
	Label = "users"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUser holds the string denoting the user field in the database.
	FieldUser = "user"
	// FieldChara holds the string denoting the chara field in the database.
	FieldChara = "chara"
	// FieldSkill holds the string denoting the skill field in the database.
	FieldSkill = "skill"
	// FieldHp holds the string denoting the hp field in the database.
	FieldHp = "hp"
	// FieldAttack holds the string denoting the attack field in the database.
	FieldAttack = "attack"
	// FieldDefense holds the string denoting the defense field in the database.
	FieldDefense = "defense"
	// FieldCritical holds the string denoting the critical field in the database.
	FieldCritical = "critical"
	// FieldBattle holds the string denoting the battle field in the database.
	FieldBattle = "battle"
	// FieldWin holds the string denoting the win field in the database.
	FieldWin = "win"
	// FieldDay holds the string denoting the day field in the database.
	FieldDay = "day"
	// FieldPercentage holds the string denoting the percentage field in the database.
	FieldPercentage = "percentage"
	// FieldLimit holds the string denoting the limit field in the database.
	FieldLimit = "limit"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// FieldComment holds the string denoting the comment field in the database.
	FieldComment = "comment"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldNext holds the string denoting the next field in the database.
	FieldNext = "next"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldURL holds the string denoting the url field in the database.
	FieldURL = "url"
	// Table holds the table name of the users in the database.
	Table = "users"
)

// Columns holds all SQL columns for users fields.
var Columns = []string{
	FieldID,
	FieldUser,
	FieldChara,
	FieldSkill,
	FieldHp,
	FieldAttack,
	FieldDefense,
	FieldCritical,
	FieldBattle,
	FieldWin,
	FieldDay,
	FieldPercentage,
	FieldLimit,
	FieldStatus,
	FieldComment,
	FieldCreatedAt,
	FieldNext,
	FieldUpdatedAt,
	FieldURL,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// UserValidator is a validator for the "user" field. It is called by the builders before save.
	UserValidator func(string) error
	// DefaultChara holds the default value on creation for the "chara" field.
	DefaultChara string
	// DefaultSkill holds the default value on creation for the "skill" field.
	DefaultSkill int
	// DefaultHp holds the default value on creation for the "hp" field.
	DefaultHp int
	// DefaultAttack holds the default value on creation for the "attack" field.
	DefaultAttack int
	// DefaultDefense holds the default value on creation for the "defense" field.
	DefaultDefense int
	// DefaultCritical holds the default value on creation for the "critical" field.
	DefaultCritical int
	// DefaultBattle holds the default value on creation for the "battle" field.
	DefaultBattle int
	// DefaultWin holds the default value on creation for the "win" field.
	DefaultWin int
	// DefaultDay holds the default value on creation for the "day" field.
	DefaultDay int
	// DefaultPercentage holds the default value on creation for the "percentage" field.
	DefaultPercentage float64
	// DefaultLimit holds the default value on creation for the "limit" field.
	DefaultLimit bool
	// DefaultStatus holds the default value on creation for the "status" field.
	DefaultStatus string
	// DefaultComment holds the default value on creation for the "comment" field.
	DefaultComment string
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultNext holds the default value on creation for the "next" field.
	DefaultNext string
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// DefaultURL holds the default value on creation for the "url" field.
	DefaultURL string
)
